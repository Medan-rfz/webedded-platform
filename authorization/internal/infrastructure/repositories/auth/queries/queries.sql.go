// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: queries.sql

package users

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const create = `-- name: Create :exec
INSERT INTO "Users" (user_id, email, password_hash)
VALUES ($1,$2,$3)
`

type CreateParams struct {
	UserID       pgtype.Int8 `json:"user_id"`
	Email        string      `json:"email"`
	PasswordHash pgtype.Text `json:"password_hash"`
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) error {
	_, err := q.db.Exec(ctx, create, arg.UserID, arg.Email, arg.PasswordHash)
	return err
}

const getByEmail = `-- name: GetByEmail :one
SELECT email, user_id, password_hash
FROM "Users" u
WHERE u.email = $1
`

func (q *Queries) GetByEmail(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRow(ctx, getByEmail, email)
	var i User
	err := row.Scan(&i.Email, &i.UserID, &i.PasswordHash)
	return i, err
}

const getById = `-- name: GetById :one
SELECT email, user_id, password_hash
FROM "Users" u
WHERE u.user_id = $1
`

func (q *Queries) GetById(ctx context.Context, userID pgtype.Int8) (User, error) {
	row := q.db.QueryRow(ctx, getById, userID)
	var i User
	err := row.Scan(&i.Email, &i.UserID, &i.PasswordHash)
	return i, err
}

const remove = `-- name: Remove :exec
DELETE FROM "Users" u
WHERE u.user_id = $1
`

func (q *Queries) Remove(ctx context.Context, userID pgtype.Int8) error {
	_, err := q.db.Exec(ctx, remove, userID)
	return err
}
