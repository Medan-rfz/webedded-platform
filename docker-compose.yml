version: "3.1"
services:

  ################################################################
  # Users service
  ################################################################
  users-service:
    image: users-service
    build: ./users-service/
    container_name: users-service
    ports:
      - "8081:8081"
    environment:
      - AUTH_DB_CONN_STR=postgresql://admin:255+1@users-service-db:5432/users_management
    depends_on:
      - users-service-db
    networks:
      - users_network
      - metrics_network

  users-service-db:
    image: bitnami/postgresql:15
    container_name: users-service-db
    volumes:
      - './volumes/users-service/postgres-data:/bitnami/postgresql'
    ports:
      - 5432:5432
    environment:
      POSTGRESQL_PGAUDIT_LOG: READ,WRITE
      POSTGRESQL_USERNAME: "admin"
      POSTGRESQL_PASSWORD: "255+1"
      POSTGRESQL_DATABASE: "users_management"
    networks:
      - users_network

  ################################################################
  # Observability
  ################################################################
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - metrics_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=255+1
    volumes:
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/datasource.yaml:/etc/grafana/provisioning/datasources/main.yaml
      - ./grafana/datasources:/var/lib/grafana/datasources
    networks:
      - metrics_network
    ports:
      - 3000:3000

networks:
  users_network:
  sessions_network:
  metrics_network:

volumes:
  postgresql_users_data:
    driver: local
  prometheus_data:
